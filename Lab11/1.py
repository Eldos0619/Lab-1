import psycopg2
import csv
from tabulate import tabulate

conn = psycopg2.connect(
    host="localhost",
    dbname="postgres",
    user="postgres",
    password="eldo0619",
    port=5432
)

cur = conn.cursor()

def call_insert_or_update():
    name = input("–ò–º—è: ")
    surname = input("–§–∞–º–∏–ª–∏—è: ")
    phone = input("–¢–µ–ª–µ—Ñ–æ–Ω: ")
    cur.execute("CALL insert_or_update_user(%s, %s, %s)", (name, surname, phone))
    conn.commit()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ.")

def call_insert_many_from_csv():
    filepath = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ CSV-—Ñ–∞–π–ª—É: ")
    users = []
    with open(filepath, 'r') as f:
        reader = csv.reader(f)
        next(reader)
        for row in reader:
            users.append(row)
    cur.execute("CALL insert_many_users(%s)", (users,))
    conn.commit()
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

def search_by_pattern():
    pattern = input("–í–≤–µ–¥–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞: ")
    cur.execute("SELECT * FROM search_pattern(%s)", (pattern,))
    rows = cur.fetchall()
    print(tabulate(rows, headers=["ID", "Name", "Surname", "Phone"], tablefmt='fancy_grid'))

def paginated_output():
    lim = int(input("–°–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –ø–æ–∫–∞–∑–∞—Ç—å: "))
    off = int(input("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π: "))
    cur.execute("SELECT * FROM get_paginated_users(%s, %s)", (lim, off))
    rows = cur.fetchall()
    print(tabulate(rows, headers=["ID", "Name", "Surname", "Phone"], tablefmt='fancy_grid'))

def delete_by_identifier():
    ident = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –Ω–æ–º–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
    cur.execute("CALL delete_user(%s)", (ident,))
    conn.commit()
    print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ.")

def show_all():
    cur.execute("SELECT * FROM phonebook")
    rows = cur.fetchall()
    print(tabulate(rows, headers=["ID", "Name", "Surname", "Phone"], tablefmt='fancy_grid'))

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
while True:
    print("""
    üìû PhoneBook –ú–µ–Ω—é:
    1. –í—Å—Ç–∞–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    2. –í—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ CSV
    3. –ù–∞–π—Ç–∏ –ø–æ —à–∞–±–ª–æ–Ω—É (–∏–º—è, —Ñ–∞–º–∏–ª–∏—è, –Ω–æ–º–µ—Ä)
    4. –ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    5. –£–¥–∞–ª–∏—Ç—å –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –Ω–æ–º–µ—Ä—É
    6. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏
    0. –í—ã—Ö–æ–¥
    """)
    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

    if choice == "1":
        call_insert_or_update()
    elif choice == "2":
        call_insert_many_from_csv()
    elif choice == "3":
        search_by_pattern()
    elif choice == "4":
        paginated_output()
    elif choice == "5":
        delete_by_identifier()
    elif choice == "6":
        show_all()
    elif choice == "0":
        break
    else:
        print("‚õî –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")

cur.close()
conn.close()
