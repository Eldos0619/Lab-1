import psycopg2
import pandas as pd

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = psycopg2.connect(
    dbname="postgres",
    user="postgres",
    password="eldo0619",
    host="localhost",
    port="5432"
)
cur = conn.cursor()


# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
def create_table():
    cur.execute("""
        CREATE TABLE IF NOT EXISTS phonebook (
            id SERIAL PRIMARY KEY,
            name VARCHAR(50) NOT NULL,
            phone VARCHAR(20) NOT NULL
        );
    """)
    conn.commit()
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞.")


# –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å
def insert_from_console():
    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")
    phone = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω: ")
    cur.execute("INSERT INTO phonebook (name, phone) VALUES (%s, %s);", (name, phone))
    conn.commit()
    print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")


# –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV-—Ñ–∞–π–ª–∞
def insert_from_csv(file_path):
    df = pd.read_csv(file_path)
    for _, row in df.iterrows():
        cur.execute("INSERT INTO phonebook (name, phone) VALUES (%s, %s);", (row['name'], row['phone']))
    conn.commit()
    print("‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ CSV –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")


# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def update_contact(name, new_phone=None, new_name=None):
    if new_phone:
        cur.execute("UPDATE phonebook SET phone = %s WHERE name = %s;", (new_phone, name))
    if new_name:
        cur.execute("UPDATE phonebook SET name = %s WHERE name = %s;", (new_name, name))
    conn.commit()
    print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –æ–±–Ω–æ–≤–ª—ë–Ω.")


# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
def query_contacts(keyword):
    cur.execute("SELECT * FROM phonebook WHERE name ILIKE %s OR phone ILIKE %s;",
                (f"%{keyword}%", f"%{keyword}%"))
    rows = cur.fetchall()
    print("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
    for row in rows:
        print(row)


# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É
def delete_contact(identifier):
    cur.execute("DELETE FROM phonebook WHERE name = %s OR phone = %s;", (identifier, identifier))
    conn.commit()
    print("üóëÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç —É–¥–∞–ª—ë–Ω.")


# –ü—Ä–∏–º–µ—Ä –º–µ–Ω—é
def main():
    create_table()
    while True:
        print("\n1. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç (–≤—Ä—É—á–Ω—É—é)")
        print("2. –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ CSV")
        print("3. –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")
        print("4. –ù–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã")
        print("5. –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")
        print("0. –í—ã—Ö–æ–¥")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if choice == "1":
            insert_from_console()
        elif choice == "2":
            path = input("–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ CSV-—Ñ–∞–π–ª—É: ")
            insert_from_csv(path)
        elif choice == "3":
            name = input("–ò–º—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ")
            new_name = input("–ù–æ–≤–æ–µ –∏–º—è (–µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ ‚Äî –Ω–∞–∂–º–∏ Enter): ")
            new_phone = input("–ù–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω (–µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ ‚Äî –Ω–∞–∂–º–∏ Enter): ")
            update_contact(name, new_phone or None, new_name or None)
        elif choice == "4":
            keyword = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –Ω–æ–º–µ—Ä: ")
            query_contacts(keyword)
        elif choice == "5":
            ident = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –Ω–æ–º–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
            delete_contact(ident)
        elif choice == "0":
            break
        else:
            print("‚õî –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")


if __name__ == "__main__":
    main()
    cur.close()
    conn.close()